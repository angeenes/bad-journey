/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');


html,
body {
  height: 100%;
  margin: 0;
  display: flex;
  flex-flow: column;
  height: 100%;
}

header {
  flex: 0 1 auto;
  /* The above is shorthand for:
  flex-grow: 0,
  flex-shrink: 1,
  flex-basis: auto
  */
}

main {
  flex: 1 1 auto;
  display: flex;
}

footer {
  flex: 0 1 40px;
}



body {
  font-family: 'Inter', sans-serif;
  --color-primary: #172328;
  --color-primary-light: #5C6166;
}

.container-full {
  padding-top: .5rem;
  width: 100%;
  background: var(--color-primary);
}

.card-img {
  opacity: 0;
  transition: opacity 0.25s ease-in-out;
}
.card.is-visible > .card-img {
  opacity: 1;
}

.card {
  position: absolute;
  text-align: center;
  font-size: 2em;
  color: white;
  line-height: 1.5em;
  border-radius: 5px;
  /* background-image: linear-gradient( 135deg, #F761A1 10%, #AC46C8 100%); */
  overflow: hidden;
  cursor: pointer;
}

.card.is-visible {
  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

.card.is-visible:hover{
  outline: 2px solid pink;
  box-sizing: content-box;
}

.card.is-visible:hover > .card-overlay {
  opacity: 1;
}

.card > .card-overlay {
  overflow: hidden;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: auto;
  width: 100%;
  height: 100%;
  font-size: 1rem;
  opacity: 0;
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
  transition: opacity 0.25s ease-in-out;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}

.card.is-visible:hover > .icon-like {
  opacity: 1;
  transition: opacity 0.25s ease-in-out;
}

.card > .icon-like {
  opacity: 0;
}

/* #gallery {
  margin-bottom: 380px;
} */

textarea, input, select {
  border: 1px solid #D2D4D6;
  border-radius: 0.375rem;
  padding: 0.5rem;
}

label {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

dialog > .loading {
  display: none;
}

dialog > .loading.active {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed;
  inset: 0;
  cursor: not-allowed;
  background: rgba(0,0,0,0.2);
}

.loader {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  position: relative;
  animation: rotate 1s linear infinite
}
.loader::before , .loader::after {
  content: "";
  box-sizing: border-box;
  position: absolute;
  inset: 0px;
  border-radius: 50%;
  border: 5px solid #FFF;
  animation: prixClipFix 2s linear infinite ;
}
.loader::after{
  border-color: rgb(236 72 153 / 1);;
  animation: prixClipFix 2s linear infinite , rotate 0.5s linear infinite reverse;
  inset: 6px;
}

@keyframes rotate {
  0%   {transform: rotate(0deg)}
  100%   {transform: rotate(360deg)}
}

@keyframes prixClipFix {
    0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}
    25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}
    50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}
    75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}
    100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}
}




.loader-bar {
	--color: rgb(156 163 175 / 1);;
	--size-bar: 0.4vmin;
	display: grid;
	place-items: center;
}

.loader-bar::before,
.loader-bar::after {
	content: '';
	box-sizing: border-box;
	position: absolute;
}

.loader-bar::before {
	height: var(--size-bar);
	width: 6vmin;
	background-color: var(--color);
	animation: loader-bar-anim 0.8s cubic-bezier(0, 0, 0.03, 0.9) infinite;
}

@keyframes loader-bar-anim {
	0%, 44%, 88.1%, 100% {
		transform-origin: left;
	}
	
	0%, 100%, 88% {
		transform: scaleX(0);
	}
	
	44.1%, 88% {
		transform-origin: right;
	}
	
	33%, 44% {
		transform: scaleX(1);
	}
}


/* UTILS */
.bg-primary {
  background: var(--color-primary);
}

.text-primary {
  color: var(--color-primary);
}

.text-primary-light {
  color: var(--color-primary-light);
}