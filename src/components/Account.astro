<article class="bg-primary flex flex-col justify-center items-center text-white w-full">

    <section id="account"></section>
    
    <section class="flex mt-3 gap-x-5">
        <button id="btnDisconnect">Disconnect</button>
        <button id="btnDelete">Delete account</button>
    </section>
    
</article>

<script>
  import { User } from "../assets/types/userObject";

  class Account {
    private user: User;
    public accountEl: HTMLElement;
    public btnDisconnect: HTMLButtonElement;

    constructor() {
      this.user = {
        id: 0,
        username: "",
        email: "",
        provider: "",
        confirmed: false,
        blocked: true,
        createdAt: "",
        updatedAt: "",
      };
      this.accountEl = document.getElementById("account") as HTMLElement;
      this.btnDisconnect = document.getElementById("btnDisconnect") as HTMLButtonElement;
    }
    public async init(): Promise<void> {
      this.user = await this.getUser();
      if (this.user.confirmed) {
        this.displayAccount();
        this.disconnect();
      }
      console.log(this.user);
    }

    public disconnect() {
        this.btnDisconnect.addEventListener("click", () => {
            localStorage.removeItem("user");
            localStorage.removeItem("token");
            window.location.href = "/";
        });
    }

    private displayAccount() {
        const user = this.user;
        const html = `
        <div class="">
          <h2 class="mb-4 text-bold uppercase">Account</h2>
          <p>Username: ${user.username}</p>
          <p>Email: ${user.email}</p>
          <p>Provider: ${user.provider}</p>
          <p>Confirmed: ${user.confirmed}</p>
          <p>Blocked: ${user.blocked}</p>
          <p>Created at: ${user.createdAt}</p>
          <p>Updated at: ${user.updatedAt}</p>
      `;
        this.accountEl.innerHTML = html;
    }

    private getUser(): User | PromiseLike<User> {
      const userLocalStorage = localStorage.getItem("user");
      if (!userLocalStorage) {
        throw new Error("No user in local storage");
      } else {
        return JSON.parse(userLocalStorage);
      }
    }
  }

  const account = new Account();
  account.init();
</script>
